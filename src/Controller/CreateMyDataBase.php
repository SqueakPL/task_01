<?php

namespace App\Controller;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Command\Command;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpClient\HttpClient;

use Symfony\Component\HttpClient\AmpHttpClient;
use Symfony\Component\HttpClient\CurlHttpClient;
use Symfony\Component\HttpClient\NativeHttpClient;

class CreateMyDataBase extends Command
{
    protected static $defaultName = 'app:create-my-database';

    private $CreateMyDataBase;

    public function __construct(string $name = null)
    {
        parent::__construct($name);
    }

    private function filtrujTekst( string $text ) : string {
        return str_replace("&",'',$text);
    }

    protected function execute(InputInterface $input, OutputInterface $output) : int
    {
        //parent::execute($input, $output); // TODO: Change the autogenerated stub

        $output->writeln('Tworzenie bazy');

        $client = HttpClient::create();
        $books = $client->request(
            'GET',
            'https://jsonplaceholder.typicode.com/posts'
        );
        $artists = $client->request(
            'GET',
            'https://jsonplaceholder.typicode.com/users'
        );

        $books = $books->toArray();
        $books_count = count($books);

        $artists = $artists->toArray();
        $artists_count = count($artists);

        $client = new CurlHttpClient(["verify_peer"=>false,"verify_host"=>false, "max_duration" => 1000]);///HttpClient::create();

        $n;

        for ($n = 0; $n < $books_count; $n++ ) {

            $userId = $books[$n]['userId'];
            $bookID = $books[$n]['id'];
            $title = $books[$n]['title'];
            $body = $books[$n]['body'];
            $name = '';

            for ($m = 0; $m < $artists_count; $m++ ) {

                if ($artists[$m]['id']==$userId) {

                    $name = $artists[$m]['name'];
                    break;
                }

            }

            /*$payload = array(
                "bookId" => $bookID,
                "name" => $name,
                "title" => $title,
                "body" => $body,
            );*/

            $client->request(
                'POST',
                'https://localhost:8000/api/books?bookId=' . CreateMyDataBase::filtrujTekst( $bookID ) . '&name=' . CreateMyDataBase::filtrujTekst( $name )
                . '&title=' . CreateMyDataBase::filtrujTekst( $title ) . '&body=' . CreateMyDataBase::filtrujTekst( $body )
            );

            //return $this->json($response);

        }

        $output->writeln('Dodano ' . $n . ' ksiazek !' );

        return Command::SUCCESS;
    }

}